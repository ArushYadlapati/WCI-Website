import{_ as t,c as o,a0 as i,o as a}from"./chunks/framework.D5XSuxOt.js";const p=JSON.parse('{"title":"Setting Up Your Two Wheel + Pinpoint IMU Localizer","description":"","frontmatter":{},"headers":[],"relativePath":"localization/twoWheelPinpointImu.md","filePath":"localization/twoWheelPinpointImu.md"}'),r={name:"localization/twoWheelPinpointImu.md"};function l(n,e,s,c,u,h){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="setting-up-your-two-wheel-pinpoint-imu-localizer" tabindex="-1">Setting Up Your Two Wheel + Pinpoint IMU Localizer <a class="header-anchor" href="#setting-up-your-two-wheel-pinpoint-imu-localizer" aria-label="Permalink to &quot;Setting Up Your Two Wheel + Pinpoint IMU Localizer&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>A GoBilda Pinpoint Odometry Computer with ONLY an i2c cord to the <code>i2c</code> port. We will not use the <code>x</code> or <code>y</code> ports.</li><li>Two odometry wheels connected to motor encoder ports on a hub.</li></ul><h2 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h2><h3 id="_1-odometry-wheel-setup" tabindex="-1">1. Odometry Wheel Setup <a class="header-anchor" href="#_1-odometry-wheel-setup" aria-label="Permalink to &quot;1. Odometry Wheel Setup&quot;">​</a></h3><p>Open the file <code>TwoWheelPinpointIMULocalizer.java</code> and configure the following:</p><ol><li><strong>Tracking Wheel Positions</strong>: Enter the positions of your tracking wheels relative to the robot&#39;s center. Use inches for measurements.</li><li><strong>Encoder Ports</strong>: Replace the <code>deviceName</code> parameters with the names of the ports connected to your encoders.</li><li><strong>IMU Orientation</strong>: Make sure that the Pinpoint has the ports facing up and the GoBilda logo at the front of the Pinpoint.</li></ol><h3 id="_2-encoder-direction-calibration" tabindex="-1">2. Encoder Direction Calibration <a class="header-anchor" href="#_2-encoder-direction-calibration" aria-label="Permalink to &quot;2. Encoder Direction Calibration&quot;">​</a></h3><p>Ensure the following:</p><ul><li>The forward encoder ticks up when the robot moves forward.</li><li>The strafe encoder ticks up when the robot moves to the left.</li></ul><h3 id="_3-localizer-tuning" tabindex="-1">3. Localizer Tuning <a class="header-anchor" href="#_3-localizer-tuning" aria-label="Permalink to &quot;3. Localizer Tuning&quot;">​</a></h3><h4 id="a-forward-localizer-tuner" tabindex="-1">a) Forward Localizer Tuner <a class="header-anchor" href="#a-forward-localizer-tuner" aria-label="Permalink to &quot;a) Forward Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot forward by 48 inches (default distance).</p></li><li><p>The tuner will display two numbers:</p><ul><li>First number: Distance the robot thinks it has traveled.</li><li>Second number (multiplier): Replace <code>FORWARD_TICKS_TO_INCHES</code> in the localizer with this value.</li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li></ol><h4 id="b-lateral-localizer-tuner" tabindex="-1">b) Lateral Localizer Tuner <a class="header-anchor" href="#b-lateral-localizer-tuner" aria-label="Permalink to &quot;b) Lateral Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot sideways (strafing) by 48 inches (default distance).</p></li><li><p>The tuner will display two numbers:</p><ul><li>First number: Distance the robot thinks it has traveled laterally.</li><li>Second number (multiplier): Replace <code>STRAFE_TICKS_TO_INCHES</code> in the localizer with this value.</li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li></ol><h2 id="testing-your-localizer" tabindex="-1">Testing Your Localizer <a class="header-anchor" href="#testing-your-localizer" aria-label="Permalink to &quot;Testing Your Localizer&quot;">​</a></h2><p>After completing the tuning steps, test the localizer as follows:</p><ol><li>Go to Localization Test and drive your robot around.</li><li>Open the FTC Dashboard at <a href="http://192.168.43.1:8080/dash" target="_blank" rel="noreferrer">http://192.168.43.1:8080/dash</a>.</li><li>Switch the view to &quot;field view&quot; from the top-right corner dropdown.</li><li>Observe if the robot&#39;s movements appear accurate on the dashboard. Re-run tuning if necessary.</li></ol><h2 id="congratulations-on-successfully-tuning-your-localizer" tabindex="-1">Congratulations on successfully tuning your localizer! <a class="header-anchor" href="#congratulations-on-successfully-tuning-your-localizer" aria-label="Permalink to &quot;Congratulations on successfully tuning your localizer!&quot;">​</a></h2>',19)]))}const m=t(r,[["render",l]]);export{p as __pageData,m as default};
